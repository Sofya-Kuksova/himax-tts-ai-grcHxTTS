#pragma once

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

// Auto-generated offsets header for FC weights binary.
// Each array holds byte offsets into the corresponding .bin file.

size_t embeddings_offsets[] = { 0x00000000 };
size_t wq_offsets[] = { 0x004EC950, 0x004FE060, 0x0050F940, 0x005212E0, 0x00531DB0, 0x005423E0 };
size_t wk_offsets[] = { 0x0042BF60, 0x0043CA00, 0x0044B8A0, 0x0045AD20, 0x0046A4E0, 0x0047A960 };
size_t wv_offsets[] = { 0x00553DD0, 0x00565E60, 0x00578C30, 0x0058AFB0, 0x0059D0D0, 0x005AEFA0 };
size_t wo_offsets[] = { 0x0048A100, 0x00496790, 0x004A5020, 0x004B7CB0, 0x004C8710, 0x004DA470 };
size_t w1_offsets[] = { 0x000FBA90, 0x0012BA20, 0x00154260, 0x001844F0, 0x001AFEE0, 0x001DEC40 };
size_t w2_offsets[] = { 0x00210A40, 0x00237440, 0x002636D0, 0x0028B130, 0x002AF620, 0x002DF800 };
size_t w3_offsets[] = { 0x00308610, 0x0033AA70, 0x0036BF40, 0x0039C950, 0x003CC480, 0x003FBEC0 };
size_t embeddings_without_encoding_offset[] = { 0x005C18D0 };
size_t rms_att_norm_offset[] = { 0x006E18D0 };
size_t rms_ffn_norm_offset[] = { 0x006E33D0 };
size_t rms_final_norm_offset[] = { 0x006E4ED0 };
size_t fcr_offset[] = { 0x006E5350 };
size_t fci_offset[] = { 0x006EB350 };


float embeddings_scale[] =  { 0.0025434217115086833f };
float wq_scale[] =  { 0.004225060809403658f, 0.0032914255280047655f, 0.003282281570136547f, 0.003370854537934065f, 0.0028457159642130136f, 0.0023474469780921936 };
float wk_scale[] =  { 0.004516038578003645f, 0.0054106079041957855f, 0.004948618821799755f, 0.004158165771514177f, 0.002803803887218237f, 0.0035512002650648355 };
float wv_scale[] =  { 0.0006445138133130968f, 0.0008757341420277953f, 0.00082378089427948f, 0.0010100100189447403f, 0.001376222469843924f, 0.0011108648031949997 };
float wo_scale[] =  { 0.002917627105489373f, 0.0022699323017150164f, 0.0009696997003629804f, 0.001992776757106185f, 0.002002050168812275f, 0.0017119268886744976 };
float w1_scale[] =  { 0.001300556119531393f, 0.0033727686386555433f, 0.0017648881766945124f, 0.0025654009077697992f, 0.0020217548590153456f, 0.0014621700393036008 };
float w2_scale[] =  { 0.0035324867349117994f, 0.0022681208793073893f, 0.0032539116218686104f, 0.0042516328394412994f, 0.001662014750763774f, 0.0030842707492411137 };
float w3_scale[] =  { 0.0014404591638594866f, 0.0011044585844501853f, 0.0012087601935490966f, 0.0014030319871380925f, 0.001461261766962707f, 0.0013908857945352793 };

#ifdef __cplusplus
}
#endif // __cplusplus
